# 1- Bir metin dosyasında satır satır saklanan sayıların toplamını ve ortalamasını hesaplayan bir program yazın. 
# Programınız aşağıdaki işlemleri gerçekleştirmelidir:

# Kullanıcıdan dosya adı isteyin.
# Dosyayı okuyun ve satırlardaki sayıları toplayın.
# Toplam ve satır sayısını kullanarak ortalama değeri hesaplayın.
# Sonuçları ekrana yazdırın.

summ = 0
number = 0
count = 0
file_to_open = input("Enter your file : ")
file_to_open = file_to_open + ".txt"  #dosyanın açılabilmesi için sonuna uzantısın ilave ediyoruz
with open(file_to_open, 'r') as f:
    for line in f:
       number = int(line[:-1]) # satir sonundaki \n ifadelerini dahil etmeden bir degiskene assign ediyoruz
       summ += number
       count += 1       
print(summ / count)

# 2- Bir metin dosyasındaki her satırın başına satır numarası ekleyen bir program yazın. 
# Programınız aşağıdaki işlemleri gerçekleştirmelidir:

# Kullanıcıdan dosya adı isteyin.
# Dosyayı okuyun ve her satırın başına satır numarası ekleyin.
# Dosyayı güncellenmiş içerikle tekrar yazın.

file_to_open = input("Değişiklik yapılacak dosya ismi : ")
file_to_open = file_to_open + ".txt"
data2 = []
counter = 0
with open(file_to_open, 'r+') as f: 
    data = f.readlines() #dosya verilerini data isminde bir listeye atıyoruz
    print (f"Dosyanın eski hali \n {data}")
    for line in data: # bir dongu ile data listesinin elemanlarinin basina satir no ekliyoruz
        counter +=1
        data2.append(str(counter) + "-" + str(line)) #yeni bir listede her satır başına sayı ekliyoruz.
    f.seek(0) # dosyanın başına geri dönüyoruz
    f.writelines(data2)   #yeni listemizi tekrardan dosyamıza yazıp güncelliyoruz

print (f"Dosyanın yeni hali \n {data2}")
print("Satır başlarına sıra numarası eklenerek dosya güncellendi...")


# 3- students.json adlı bir JSON dosyasında öğrenci bilgilerini saklayın. Bu dosya, ad, soyad ve yaş
# bilgilerini içeren öğrenci nesnelerinden oluşan bir liste içermelidir. Programınız aşağıdaki işlemleri gerçekleştirmelidi
# students.json dosyasını okuyun.
# Kullanıcıdan yeni bir öğrenci ekleme veya mevcut öğrencilerin listesini görüntüleme seçeneklerini sunun.
# Yeni öğrenci ekleme seçeneği seçilirse, kullanıcıdan öğrenci adı, soyadı ve yaşını isteyin ve JSON dosyasına ekleyin.
# Öğrenci listesini görüntüleme seçeneği seçilirse, öğrenci bilgilerini ekrana yazdırın.
# JSON dosyasını güncelleyin ve programı sonlandırın.

import json
with open('student.json', 'r+') as f:
    data = json.load(f)   #json dosyasini dict yapıyoruz...

    def add_student():
        addname = input("Enter name to add to database :")
        addage = input("Enter age :")
        data.update ({addname: addage})    #data dict na yeni kayıt ekliyoruz...     
        print("Succesfully updated..")
        print(data)
        with open('student.json', 'w') as f:
            json.dump(data, f)   #data dictionary dosyasını tekrardan json dosyası haline getiriyoruz.
   
def search_student():
    search=input("Enter the name of student : ")
    if search in data:
        print(f"The age of the person is {data[search]}")
    else:
        print  (f"{search} adinda bir kayit bulunamadi.")
def listing():
    print(print(json.dumps(data, indent = 4, sort_keys=True))) #tüm verileri listeleyen fonsiyon, indent ile satırbaşı yapıyoruz işte
while True:
    select=input("1-Add student\n2-View student\n3-All list\n4-EXIT\n\nYapmak istediğiniz işlem nedir?--")
    if select=="1":
        add_student()
    elif select=="2":
        search_student()
    elif select == '3':
        listing()
    elif select == "4":
            break
